<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.kdevo.camunda.connect</groupId>
    <artifactId>web3-connector</artifactId>
    <version>0.3.2-SNAPSHOT</version>

    <name>Camunda Web3-Connector</name>

    <properties>
        <camunda.version>7.8.0</camunda.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-bom</artifactId>
                <version>${camunda.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <!-- process engine, needs to be provided -->
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Required to use Spin dataformat support in unit tests -->
        <dependency>
            <groupId>org.camunda.spin</groupId>
            <artifactId>camunda-spin-dataformat-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-plugin-spin</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Required to use Templates in unit tests -->
        <dependency>
            <groupId>org.camunda.template-engines</groupId>
            <artifactId>camunda-template-engines-freemarker</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.camunda.template-engines</groupId>
            <artifactId>camunda-template-engines-velocity</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Needed for InMemoryH2Test -->
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.1.210</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Used to generate test coverage reports, see
            https://github.com/camunda/camunda-consulting/tree/master/snippets/camunda-bpm-process-test-coverage -->
            <groupId>org.camunda.bpm.extension</groupId>
            <artifactId>camunda-bpm-process-test-coverage</artifactId>
            <version>0.3.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- use logback as logger -->
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <!-- apache commons logging => slf4j -->
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!--  java util logging => slf4j -->
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>1.7.7</version>
            <scope>test</scope>
        </dependency>

        <!-- Add your own dependencies here, if in compile scope, they are added to the war -->
        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-plugin-connect</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.camunda.connect</groupId>
            <artifactId>camunda-connect-connectors-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.web3j</groupId>
            <artifactId>core</artifactId>
            <version>3.3.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <!-- Groovy version must match the shipped version of Camunda, be careful when updating! -->
            <version>2.4.5</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.1</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>camunda-bpm-nexus</id>
            <name>Camunda BPM Maven Repository</name>
            <url>https://app.camunda.com/nexus/content/groups/public</url>
        </repository>
    </repositories>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- Minimize Switch might be enabled again in the future as soon as
                                 the filters are working correctly. -->
                            <minimizeJar>false</minimizeJar>
                            <filters>
                                <!--
                                <filter>
                                    <artifact>org.web3j:*</artifact>
                                    <includes>
                                        <include>org.web3j.abi.datatypes.**</include>
                                    </includes>
                                </filter>
                                -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>